{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoFilter","getInput","useState","searchInput","setSearchInput","typeSelect","setTypeSelect","useEffect","className","value","onChange","event","target","type","placeholder","style","pointerEvents","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoList","todos","select","selectTodo","map","todo","id","completed","classNames","title","TodoModal","user","setUser","isLoad","setIsLoad","loadUser","a","userId","userFromServer","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","setSelectTodo","loadTodos","listTodos","todoId","inputType","visibleMovies","filter","toLowerCase","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dc0bb14.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ntype Props = {\n  getInput: (searchInput: string, typeSelect: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ getInput }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [typeSelect, setTypeSelect] = useState('all');\n\n  useEffect(() => {\n    getInput(searchInput, typeSelect);\n  }, [searchInput, typeSelect]);\n\n  return (\n    <>\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={typeSelect}\n              onChange={(event) => {\n                setTypeSelect(event.target.value);\n              }}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={searchInput}\n            onChange={(event) => {\n              setSearchInput(event.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {searchInput && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setSearchInput('');\n                }}\n              />\n            )}\n          </span>\n        </p>\n      </form>\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  select: (todoId: number) => void,\n  selectTodo: number,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, select, selectTodo }) => {\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed === true && (\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    classNames(\n                      'has-text',\n                      { 'has-text-success': todo.completed },\n                      { 'has-text-danger': !todo.completed },\n                    )\n                  }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => select(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far fa-eye',\n                      { 'fa-eye-slash': selectTodo === todo.id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | undefined,\n  select: (todoId: number) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, select }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoad, setIsLoad] = useState(true);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      if (todo) {\n        const userFromServer = await getUser(todo.userId);\n\n        setUser(userFromServer);\n        setIsLoad(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user || isLoad || !todo\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => select(0)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={\n                  classNames('has-text',\n                    { 'has-text-danger': !todo.completed },\n                    { 'has-text-success': todo.completed })\n                }\n                >\n                  {\n                    todo.completed === false\n                      ? 'Planned'\n                      : 'Done'\n                  }\n\n                </strong>\n\n                {' by '}\n\n                <a href={`${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      ;\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  const [selectTodo, setSelectTodo] = useState(0);\n  const [isLoad, setIsLoad] = useState(true);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const listTodos = await getTodos();\n\n      setTodos(listTodos);\n      setIsLoad(false);\n      setVisibleTodos(listTodos);\n    };\n\n    loadTodos();\n  }, []);\n\n  const todosFilter = (inputType: string, typeSelect: string) => {\n    let visibleMovies = todos.filter(\n      ({ title }) => title.toLowerCase().includes(inputType),\n    );\n\n    if (typeSelect === 'active') {\n      visibleMovies = todos\n        .filter(({ completed }) => completed === false);\n    }\n\n    if (typeSelect === 'completed') {\n      visibleMovies = todos\n        .filter(({ completed }) => completed === true);\n    }\n\n    setVisibleTodos(visibleMovies);\n  };\n\n  const select = (todoId: number) => setSelectTodo(todoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                getInput={todosFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoad\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    select={select}\n                    selectTodo={selectTodo}\n                  />\n                ) }\n            </div>\n\n            {selectTodo > 0 && (\n              <TodoModal\n                todo={visibleTodos.find(todo => todo.id === selectTodo)}\n                select={select}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}